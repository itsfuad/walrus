
type Person struct {
    name: str,
    age: i32
};

type IPerson interface {
    fn get_name() -> str;
    fn get_age() -> i32
};

let person : Person = @Person {
    name: "John",
    age: 25
};

type PersonType Person;

let person2 := @PersonType {
    name: "Doe",
    age: 30
};

let userMap : map[str]i32 = $map[str]i32 {
    "John" => 25,
    "Doe" => 30
};

type UserSalary map[str]i32;

fn getAdmin() -> str {
    ret "Admin";
}

let userMap2 := $UserSalary {
    "John" => 25,
    "Doe" => 30,
    getAdmin() => 40,
};

//access properties
let name := person.name;
let age := person.age;

let name2 := person2.name;
let age2 := person2.age;

let age3 := userMap["John"];
let age4 := userMap2["John"];
let age5 := userMap2[getAdmin()];

//try to modify
person.name = "Doe";
person.age = 30;

person2.name = "John";
person2.age = 25;

userMap["John"] = 30;
userMap2["John"] = 30;
userMap2[getAdmin()] = 40;