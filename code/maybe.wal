
let a : maybe{i32} = 3; // a is iMAP32 or null

a = 10; // allowed
//a = 2.4; // not allowed
a = null; // allowed
let b := 34;

//now let's try to access the value
//let x := 2 + a; // cannot add i32 and maybe{i32}

let res: i32 = 12;
//safe access
safe a {
    //a is i32 here
    res = 2 + a + 5; // allowed
} otherwise {
    //a is null here
    //res = a; // not allowed
}

let pointer := &a; // pointer is *i32
let pointer2 : *i32 = &b; // pointer2 is *i32


type Point struct{
    x: i32,
    y: i32
};

let p := @Point{x: 1, y: 2};

type MAP map[str]i32;

let m := #MAP{"x": 1, "y": 2};